{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\Practica\\\\React-Course\\\\nextjs-course-2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { execOnce } from 'next/dist/next-server/lib/utils';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    description: props.description,\n    image: props.image,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/fabri/Desktop/Practica/React-Course/nextjs-course-2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","execOnce","MeetupDetails","props","title","description","image","address"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,QAAT,QAAyB,iCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,KADjB;AAEI,IAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAII,IAAA,OAAO,EAAEH,KAAK,CAACI;AAJnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQL,a;;AAgDT,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\nimport { execOnce } from 'next/dist/next-server/lib/utils';\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            title={props.title}\r\n            description={props.description}\r\n            image={props.image}\r\n            address={props.address}\r\n        ></MeetupDetail>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://leko:mongodb@cluster0.1dbtc.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const data = db.collection('meetups');\r\n    const meetups = await data.find({}, { _id: 1 }).toArray();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((mu) => {\r\n            return {\r\n                params: {\r\n                    meetupId: mu._id.toString(),\r\n                },\r\n            };\r\n        }),\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://leko:mongodb@cluster0.1dbtc.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const data = db.collection('meetups');\r\n    const meetup = await data.findOne({_id: meetupId});\r\n    return {\r\n        props: {\r\n            title: meetup.title,\r\n            description: meetup.description,\r\n            image: meetup.image,\r\n            address: meetup.address,\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}