{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/_jsx(MeetupDetail, {\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      image: props.meetupData.image,\n      address: props.meetupData.address\n    })\n  });\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://leko:mongodb@cluster0.1dbtc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const data = db.collection('meetups');\n  const meetups = await data.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(mu => {\n      return {\n        params: {\n          meetupId: mu._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://leko:mongodb@cluster0.1dbtc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const data = db.collection('meetups');\n  const meetup = await data.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: {\n        title: meetup.title,\n        description: meetup.description,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetupId\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}