{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\Practica\\\\React-Course\\\\nextjs-course-2\\\\pages\\\\index.js\";\nimport React from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head'; //31\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = HomePage;\n\n/* export function getServerSideProps(context) {\r\n    // every req\r\n    const request = context.req;\r\n    const response = context.res;\r\n    return {\r\n        props: { meetups: DUMMY_MEETUPS },\r\n        revalidate: 1,\r\n    };\r\n} */\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/fabri/Desktop/Practica/React-Course/nextjs-course-2/pages/index.js"],"names":["React","MeetupList","Head","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQF,Q;;AAqCT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\nimport Head from 'next/head';\r\n//31\r\nfunction HomePage(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <MeetupList meetups={props.meetups} />;\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    // every x seconds (revalidate)\r\n    // fetch\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://leko:mongodb@cluster0.1dbtc.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n    client.close();\r\n    return {\r\n        props: {\r\n            meetups: meetups.map((mtps) => {\r\n                return {\r\n                    title: mtps.title,\r\n                    address: mtps.address,\r\n                    image: mtps.image,\r\n                    description: mtps.description,\r\n                    id: mtps._id.toString(),\r\n                };\r\n            }),\r\n        },\r\n        //revalidate: 10,\r\n    };\r\n}\r\n\r\n/* export function getServerSideProps(context) {\r\n    // every req\r\n    const request = context.req;\r\n    const response = context.res;\r\n    return {\r\n        props: { meetups: DUMMY_MEETUPS },\r\n        revalidate: 1,\r\n    };\r\n} */\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}